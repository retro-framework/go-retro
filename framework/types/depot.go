package types

import (
	"context"
)

// Depot is a general storage interface for application related data. The
// name is chosen to draw parallels with the Repository concept sometimes
// used in CQRS/Event Sourcing applications.
//
// The name is chosen because in Retro the Depot also stores metrics about
// the commands themselves, as well as performance information, not simply
// the Events generated by commands.
type Depot interface {
	Claim(context.Context, string) bool
	Release(string)

	Exists(PartitionName) bool

	// Retrieve a specific aggregate by applying events to it
	// concerned with mostly "Command" execution.
	Rehydrate(context.Context, Aggregate, PartitionName) error

	// For enumerating or matching on
	Glob(context.Context, string) PartitionIterator

	StorePacked(...HashedObject) error
	MoveHeadPointer(old, new Hash) error
}
